/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The media type of the entry. Often determines the structure of references.
 */
export type Type = string;
/**
 * The title of this entry.
 */
export type Title =
  | string
  | {
      value: Value;
      verbatim?: Verbatim;
      short?: ShortForm;
    };
export type Value = string;
/**
 * If true, disables text case transformations.
 */
export type Verbatim = boolean;
/**
 * A short form that a citation style can choose to render over the longer form.
 */
export type ShortForm = string;
/**
 * The person or people primarily responsible for the creation of this entry.
 */
export type Author = Person | Person[];
export type Person =
  | string
  | {
      name: Name;
      "given-name"?: GivenName;
      prefix?: Prefix;
      suffix?: Suffix;
      alias?: Alias;
    };
/**
 * The family name of the person.
 */
export type Name = string;
/**
 * The given name of the person.
 */
export type GivenName = string;
/**
 * The prefix of the person's name.
 */
export type Prefix = string;
/**
 * The suffix of the person's name.
 */
export type Suffix = string;
/**
 * An alias for the person.
 */
export type Alias = string;
/**
 * The date of publication or creation of this entry.
 */
export type Date = number | string;
/**
 * Entry in which the current entry was published, or to which it is strongly associated.
 */
export type ParentEntry = BibliographyEntry | BibliographyEntry[];
/**
 * The abstract or summary of the entry.
 */
export type Abstract =
  | string
  | {
      value: Value;
      verbatim?: Verbatim;
      short?: ShortForm;
    };
/**
 * The type, class, or subtype of the item (e.g. "Doctoral dissertation" for a PhD thesis; "NIH Publication" for an NIH technical report). This field is not intended for topical descriptions or categories (e.g. "adventure" for an adventure movie).
 */
export type Genre =
  | string
  | {
      value: Value;
      verbatim?: Verbatim;
      short?: ShortForm;
    };
/**
 * The person or people responsible for selecting and revising the content of the entry.
 */
export type Editor = Person | Person[];
/**
 * The role of the person or people in relation to the entry.
 */
export type Role =
  | "translator"
  | "afterword"
  | "foreword"
  | "introduction"
  | "annotator"
  | "commentator"
  | "holder"
  | "compiler"
  | "founder"
  | "collaborator"
  | "organizer"
  | "cast-member"
  | "composer"
  | "producer"
  | "executive-producer"
  | "writer"
  | "cinematography"
  | "director"
  | "illustrator"
  | "narrator";
/**
 * The name(s) of the person or people involved in the role.
 */
export type PeopleInvolved = Person | Person[];
/**
 * The people involved with the entry that do not fit `author` or `editor` roles.
 */
export type AffiliatedPeople = AffiliatedList[];
/**
 * The number of the item in a library, institution, or collection. Use with the `archive` field.
 */
export type CallNumber =
  | string
  | {
      value: Value;
      verbatim?: Verbatim;
      short?: ShortForm;
    };
/**
 * The name of the publisher. The publisher's location also be included.
 */
export type Publisher =
  | string
  | {
      name: PublisherName;
      location?: PublisherLocation;
    };
/**
 * The name of the publisher.
 */
export type PublisherName = string;
/**
 * The location of the publisher.
 */
export type PublisherLocation = string;
/**
 * The location at which the entry is physically located or took place. For the location where an item was published, use the `publisher` field instead.
 */
export type Location =
  | string
  | {
      value: Value;
      verbatim?: Verbatim;
      short?: ShortForm;
    };
/**
 * The organization at/for which the entry was produced.
 */
export type Organization =
  | string
  | {
      value: Value;
      verbatim?: Verbatim;
      short?: ShortForm;
    };
/**
 * For an entry whose parent has multiple issues, this field identifies to which specific issue the entry belongs. Also used to indicate the episode number for TV series.
 */
export type Issue = number | string;
/**
 * For an entry whose parent has multiple volumes, parts, seasons, etc., this field identifies to which specific volume the entry belongs.
 */
export type Volume = number | string;
/**
 * The total number of volumes, parts, seasons, etc., in the series that contains this entry.
 */
export type VolumeTotal = number;
/**
 * The published version of the entry.
 */
export type Edition = number | string;
/**
 * The range of pages within that this entry occupies within the parent.
 */
export type PageRange = number | string;
/**
 * The total number of pages in the entry.
 */
export type PageTotal = number;
/**
 * The time range within the parent at which this entry starts and ends.
 */
export type TimeRange = string;
/**
 * The total runtime of the entry.
 */
export type Runtime = string;
/**
 * The canonical public URL of the entry, which may include an access date.
 */
export type URL =
  | string
  | {
      value: URLValue;
      date?: AccessDate;
    };
/**
 * The URL value.
 */
export type URLValue = string;
/**
 * The access date of the URL.
 */
export type AccessDate = number | string;
/**
 * Any serial number, including article numbers, associated with the entry. If you have serial numbers of well-known schemes like `doi`, you should put them into the serial number as a dictionary. Hayagriva will recognize and specially treat `doi`, `isbn`, `issn`, `pmid`, `pmcid`, and `arxiv`. You can also include `serial` for the serial number when you provide other formats as well.
 */
export type SerialNumber =
  | (string | number)
  | {
      doi?: DOI;
      isbn?: ISBN;
      issn?: ISSN;
      pmid?: PMID;
      pmcid?: PMCID;
      arxiv?: ArXiv;
      serial?: SerialNumber1;
    };
/**
 * Digital Object Identifier.
 */
export type DOI = string;
/**
 * International Standard Book Number.
 */
export type ISBN = string;
/**
 * International Standard Serial Number.
 */
export type ISSN = string;
/**
 * PubMed Identifier.
 */
export type PMID = string;
/**
 * PubMed Central Identifier.
 */
export type PMCID = string;
/**
 * arXiv Identifier.
 */
export type ArXiv = string;
/**
 * Serial number.
 */
export type SerialNumber1 = string;
/**
 * The language of the entry.
 */
export type Language = string;
/**
 * The name of the institution/collection where the entry is kept.
 */
export type Archive =
  | string
  | {
      value: Value;
      verbatim?: Verbatim;
      short?: ShortForm;
    };
/**
 * The location of the institution/collection where the entry is kept.
 */
export type ArchiveLocation =
  | string
  | {
      value: Value;
      verbatim?: Verbatim;
      short?: ShortForm;
    };
/**
 * A short markup, decoration, or annotation to the entry (e.g., to indicate items included in a review).
 */
export type Note =
  | string
  | {
      value: Value;
      verbatim?: Verbatim;
      short?: ShortForm;
    };

/**
 * A bibliography management format for the modern age.
 */
export interface Hayagriva {
  [k: string]: BibliographyEntry;
}
/**
 * A single bibliography entry.
 */
export interface BibliographyEntry {
  type: Type;
  title?: Title;
  author?: Author;
  date?: Date;
  parent?: ParentEntry;
  abstract?: Abstract;
  genre?: Genre;
  editor?: Editor;
  affiliated?: AffiliatedPeople;
  "call-number"?: CallNumber;
  publisher?: Publisher;
  location?: Location;
  organization?: Organization;
  issue?: Issue;
  volume?: Volume;
  "volume-total"?: VolumeTotal;
  edition?: Edition;
  "page-range"?: PageRange;
  "page-total"?: PageTotal;
  "time-range"?: TimeRange;
  runtime?: Runtime;
  url?: URL;
  "serial-number"?: SerialNumber;
  language?: Language;
  archive?: Archive;
  "archive-location"?: ArchiveLocation;
  note?: Note;
}
export interface AffiliatedList {
  role: Role;
  names: PeopleInvolved;
}
